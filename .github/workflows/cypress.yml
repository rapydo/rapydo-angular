name: Cypress

on:
  push:
  pull_request:
  workflow_dispatch:

# Cancel previous running jobs on the same branch in case of new pushs
concurrency:
  group: cypress-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    strategy:
      matrix:
        stage: [lite, full, totp]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "16.x"
      - name: Install
        env:
          REF_BRANCH: ${{ github.ref }}
          HEAD_REF_BRANCH: ${{ github.head_ref }}

        run: |
          python -m pip install --upgrade pip
          # version is "x.y.0": convert in x.y
          export CURRENT_VERSION=$(grep '"version"' src/package.json | awk {'print $2'} | tr -d '", ' | awk -F. {'print $1 "." $2'})
          pip install --upgrade --no-cache-dir git+https://github.com/rapydo/do.git@${CURRENT_VERSION}
          auth_services=(postgres neo4j)
          AUTH=${auth_services[$(($RANDOM % ${#auth_services[@]}))]}
          echo "Selected random authentication service = ${AUTH}"
          # Make the environment variable available to next steps
          echo "AUTH=${AUTH}" >> $GITHUB_ENV
          mkdir rapydo_tests
          cd rapydo_tests
          rapydo install compose
          rapydo --testing create prj --auth ${AUTH} --frontend angular --origin-url https://your_remote_git/your_project.git

          # REF contains the branch when commit, but contains refs/pull/XXX/merge on PRs
          # with PRs use HEAD_REF
          # Strip out refs/heads/ prefix
          if [[ ! -z $HEAD_REF_BRANCH ]];
          then
            BRANCH=${HEAD_REF_BRANCH/refs\/heads\//}
          else
            BRANCH=${REF_BRANCH/refs\/heads\//}
          fi
          # Also strip out tags from the branch
          BRANCH=${BRANCH/refs\/tags\/v/}
          echo "Forcing rapydo-angular to branch ${BRANCH}"
          echo "  submodules:" >> projects/prj/project_configuration.yaml
          echo "    rapydo-angular:" >> projects/prj/project_configuration.yaml
          echo "      branch: \"${BRANCH}\"" >> projects/prj/project_configuration.yaml

          # This is to create a commit in the history to fill the BUILD variable
          git config --global user.email "tests@rapy.do"
          git config --global user.name "RAPyDo"
          git add -A && git commit -a -m "Initial commit"

      - name: Setup Cypress
        uses: rapydo/actions/setup-cypress@v2
        if: ${{ github.event_name != 'pull_request'}}
        with:
          id: ${{ secrets.CYPRESS_PROJECT_ID }}
          key: ${{ secrets.CYPRESS_RECORD_KEY }}

      - name: Setup Project
        run: |
          cd rapydo_tests

          rapydo --testing init
          rapydo add --force component sink

          rapydo pull --quiet

          if [[ "${{ matrix.stage }}" == "full" ]]; then

            rapydo \
              -e API_AUTOSTART=1 \
              -e PROJECT_TITLE="Your ${AUTH} ${{ matrix.stage }} Project" \
              -e ALLOW_TERMS_OF_USE=1 \
              -e AUTH_FORCE_FIRST_PASSWORD_CHANGE=1 \
              -e AUTH_MIN_PASSWORD_LENGTH=10 \
              -e AUTH_MAX_LOGIN_ATTEMPTS=10 \
              -e AUTH_MAX_PASSWORD_VALIDITY=120 \
              -e AUTH_DISABLE_UNUSED_CREDENTIALS_AFTER=60 \
              start

          elif [[ "${{ matrix.stage }}" == "totp" ]]; then

            rapydo \
              -e API_AUTOSTART=1 \
              -e PROJECT_TITLE="Your ${AUTH} ${{ matrix.stage }} Project" \
              -e ALLOW_TERMS_OF_USE=1 \
              -e AUTH_FORCE_FIRST_PASSWORD_CHANGE=1 \
              -e AUTH_MIN_PASSWORD_LENGTH=12 \
              -e AUTH_MAX_LOGIN_ATTEMPTS=10 \
              -e AUTH_MAX_PASSWORD_VALIDITY=120 \
              -e AUTH_DISABLE_UNUSED_CREDENTIALS_AFTER=60 \
              -e AUTH_SECOND_FACTOR_AUTHENTICATION=1 \
              -e AUTH_TOTP_VALIDITY_WINDOW=10 \
              start

          else

            rapydo \
              -e API_AUTOSTART=1 \
              -e PROJECT_TITLE="Your ${AUTH} ${{ matrix.stage }} Project" \
              start

          fi

          sleep 30
          rapydo logs
          rapydo shell frontend "yarn install"
          rapydo shell frontend "yarn workspaces focus --all"
          rapydo shell frontend "reload-types"
          rapydo shell frontend "yarn info --recursive --dependents"
          rapydo logs

      - name: Run Cypress
        run: |
          cd rapydo_tests

          if [[ "${{github.actor}}" == "renovate[bot]" ]] || [[ "${{github.event_name}}" == "pull_request" ]]; then
            rapydo shell frontend "yarn run cypress:start:norecord"
          else
            rapydo shell frontend "yarn run cypress:start:${{ matrix.stage }}"
          fi

          rapydo shell frontend "npx nyc --all report --reporter=lcov --report-dir /coverage"

      - name: Coverage
        uses: rapydo/actions/coverage@v2
        with:
          repository: rapydo_tests/submodules/rapydo-angular
          cov_file: rapydo_tests/data/prj/karma/lcov.info

      - name: Print backend logs on failure
        if: ${{ failure() }}
        run: cat rapydo_tests/data/logs/backend-server.log

      - name: Print mocked email on failure
        if: ${{ failure() }}
        run: cat rapydo_tests/data/logs/mock.mail.*.body 2>/dev/null || true

      - name: Docker logs on failure
        if: failure()
        run: |
          cd rapydo_tests
          rapydo logs
